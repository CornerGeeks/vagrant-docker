doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Vagrant

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article

      section
        h1 Is that a Vagrant in your Computer?
        h3 Using Vagrant to set up your environment

      section
        h2 Introduction
        h3 Timothy Lim
        h4
          a(href='https://twitter.com/thewheat') @thewheat
        h4
          a(href='http://thewheatfield.org') thewheatfield.org
        h4
          a(href='http://bruneigeekmeet.com') bruneigeekmeet.com
        h4
          a(href='http://cornergeeks.com') cornergeeks.com

      section
        h2 Let's start development!
        h3 In Theory        
        ol
          li Go to website &amp; install requirements
          li Code
            br
            img(src='images/type_keyboard.gif',style='width:70%')
          li Profit!


      section
        h2 Let's start development!
        h3 In Reality
        p.bullet
          ol.bullet
            li Go to website
            li Try to install requirements
            li See something breaks
            li Google Bing the problem
            li Try to fix it
            li Go to Step 2
              p
                img(src='images/bang_head_keyboard.gif')


      section
        h2 Vagrant
        h3 <a href="http://vagrantup.com">vagrantup.com</a>
        h5 Create and configure reproducible &amp; portable development environments
        p
        p 
        p.bullet
          strong.bullet How-To Use
          ol.bullet
            li.bullet Install
            li.bullet Download configuration file (i.e. Vagrantfile). 
              br
              | Manual download or quickstart via command line
              br
              span.code vagrant init hashicorp/precise32
            li.bullet Start the box
              br
              span.code vagrant up
            li.bullet Environment set up perfectly and ready to go

      section
        h2 Where does the Vagrant environment live?
        p.bullet
        ul.bullet
          li Depends on 
            a(href='http://docs.vagrantup.com/v2/providers/') the provider
          li Typically Virtual Machines: 
            a(href='http://www.virtualbox.org/') VirtualBox, 
            a(href='http://www.vmware.com/') VMWare
          li But 
            a(href='https://github.com/mitchellh/vagrant/wiki/Available-Vagrant-Plugins#providers') many more 
            | including 
            a(href='https://github.com/mitchellh/vagrant-aws') AWS

      section
        h2 Vagrant Terminology
        ol.bullet
          li.bullet
            b Boxes: 
            ul
              li base operating system image to create the Vagrant environment from (e.g. .iso file to install an OS)
          li.bullet
            b Vagrantfile:
            ul
              li configuration file that creates a Vagrant Environment from a Box
          li.bullet
            b Vagrant Environment:
            ul
              li the actual running instance of a environment built from a Box via a Vagrantfile
          li.bullet
            b Providers: 
            ul
              li where the Vagrant Environment actually runs
              li specified in the Vagrantfile

      section
        h2 Vagrantfile
        h3 configuration file
        p.bullet
        ul.bullet
          li.bullet
            b 
            a(href='http://docs.vagrantup.com/v2/getting-started/boxes.html') Box
            | : base OS image to create environment from
          li.bullet 
            b Environment settings
            | : Name, memory usage
          li.bullet 
            b 
            a(href='http://docs.vagrantup.com/v2/getting-started/networking.html') Networking
            | : Port forward to be accessible from host
          li.bullet 
            b 
            a(href='http://docs.vagrantup.com/v2/getting-started/synced_folders.html') Synced Folders
            | : by default 
            span(class='code') /vagrant
            |  in the Vagrant environment is linked to 
            | host machine's filesystem where the Vagrantfile is
          li.bullet
            b 
            a(href='http://docs.vagrantup.com/v2/getting-started/provisioning.html') Provisioning
            | : install your tech stack

      sectopm
        h2 Vagrantfile
        h3 sample
        pre(class='code',style='text-align: left; font-size: smaller',)
          | Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
          |    config.vm.box = "hashicorp/precise32"
          |    config.vm.hostname = "GDGBNdevfest2014"
          br
          |    config.vm.network "forwarded_port", guest: 80, host: 8000
          |    config.vm.network "forwarded_port", guest: 8080, host: 8080
          |    config.vm.network "private_network", ip: "192.168.10.19"
          br
          |    config.vm.synced_folder "www", "/var/www"
          |    config.vm.synced_folder "var_cache_apt", "/var/cache/apt/"
          br
          |    config.vm.provision "shell", :path => "setup.sh"
          |  end

      section
        h2 Vagrant Commands
        ul
          li Initialize Vagrantfile from vagrantcloud.com
            br
            span(class='code') vagrant init hashicorp/precise32
          li Start Machine
            br
            span(class='code') vagrant up
          li Suspend Machine (your files are safe)
            br
            span(class='code') vagrant halt
          li Nuke it all!
            br
            span(class='code') vagrant destroy
          li SSH into its heart (Windows may need Putty)
            br
            span(class='code') vagrant ssh 

      section
        h2 Vagrant Commands
        ul.bullet
          li Provision, we must (runs first time with vagrant up)
            br
            span(class='code') vagrant provision
          li.bullet Box Managment 
            br
            span(class='code') vagrant box
            ul
              li All locally downloaded boxes
                br
                span(class='code') vagrant box list

      section
        h2 Vagrant Cloud
        h3
          a(href="https://vagrantcloud.com") vagrantcloud.com
        ul
          li Search / Download existing boxes
          li Share your boxes

      section
        h2 Problems
        h3 It's never just a walk in the clouds
        p.bullet
        ul.bullet
          li.bullet
            b Corrupted boxes: 
            ul
              li Need to manually delete locally downloaded box
          li.bullet
            b Shared folder not set up: 
            | Google Bing it
          li.bullet
            b Incompatible Vagrant and VirtualBox: 
            ul
              li Update to latest else slowly downgrade VirtualBox
          li.bullet
            b git cloning UNIX vs Windows line endings: 
            ul
              li dos2unix
              li
                span(class='code') git config --global core.autocrlf input
          li.bullet
            b Possibly time consuming and painful to setup

      section
        h1 And that's Vagrant in a nutshell
        h3 Hopefully....

      section
        h1 But wait, there's more!

      section
        h1 Computer Whaling
        h3 Using Docker to set up your environment

      section
        h2 Docker
        h3
          a(href='http://docker.io/') docker.io
          ul.bullet
            li Open platform for developers and sysadmins to build, ship, and run distributed applications.
            li Portable and lightweight (FAST!)
            li.bullet Focused more on deployment and production
            li.bullet Development solutions exist such as  
              a(href='http://www.fig.sh/') Fig
      section
        h2 Docker Terminology
        h3
          a(href='https://docs.docker.com/introduction/understanding-docker/') Understanding Docker
        ul
          li 
            b Images: 
            | (build component)
            ul
              li Read-only template to create containers from
              li Similar to Vagrant Boxes

          li  
            b Registries: 
            | (distribution component)
            ul 
              li Storage of images
              li Public 
                a(href='http://hub.docker.com/') Docker Hub
                |  or Private 
                a(href='https://github.com/docker/docker-registry') Docker Registry
          li 
            b Containers: 
            | (run component)
            ul
              li Seen has processes on your computer
              li Once it finished, it will close
          li
            b Dockerfile: 
            ul
              li a configuration file to build Docker Images
      section
        h2 Docker Commands
        ul
          li docker search *search string* : find docker container images on the web
          li docker/pull username/repo   : download container image locally
          li docker/pull username:latest : download container image locally
          li docker ps : lists all running containers (processes)
          li docker run image/name command_to_run arguments_to_command : docker run learn/hello-world echo hello world
          li docker run -t -i repo/tag /bin/bash
          li docker ps : list active running containers
          li docker ps -l : last running container
          li docker ps -a : all previous containers
          li docker inspect container_name_or_id
          li docker images : list all images downloaded
          li docker push repository (repository: username/imagename)
          li docker rm container_name_or_id : delete container
          li docker rmi image_name_or_id : delete image (docker rmi repo:tag)
          li docker commit container_id  -m="message for the commit" -a="name of author" username/reponame:tagname
          li docker stop container_id_or_name
          li docker build -t devfest . : build image from dockerfile
          li docker run -d -P training/webapp python app.py | auto port map
          li docker port container_id_or_name containerPort
          li http://stackoverflow.com/questions/23626360/simple-example-of-vagrantfile-dockerfile-to-run-node-app
          li https://github.com/devert/vagrant-nodejs-app-starter
          li http://www.altviz.co/blog/using-docker-as-a-development-environment
          li docker run -p 8080:8080 -p 35729:35729  -w "/tmp/presentation-tabs/" devfest/node gulp serve
            a(href='https://github.com/boot2docker/boot2docker') boot2docker
          li docker run -d -p hostPort:dockerContainerPort training/webapp python app.py
          li Linking containers
            ol
              li docker run -d --name db training/postgres
              li docker run -d -P --name web --link db:db training/webapp python app.py
              li /etc/hosts in web will have entry for db so can directly communicate
          li
            a(href='https://www.youtube.com/watch?v=-l9xH1X_rvg') Supercharge your development environment using Docker 
          li 
            a(href='https://hub.docker.com/') Docker Hub
          li
            a(href='https://github.com/wsargent/docker-cheat-sheet') Docker Cheat sheet

          li Managing Data in Containers
            ol
              li data volumes
              li data containers          
          li data volumnes
            ol
              li Data volumes can be shared and reused between containers
              li Changes to a data volume are made directly
              li Changes to a data volume will not be included when you update an image
              li Volumes persist until no containers use them          
            ol
              li docker run -d -P --name web -v /webapp training/webapp python app.py
              li Mount host file system  
                docker run -d -P --name web -v /src/webapp:/opt/webapp training/webapp python app.py 
          li data container
            ol
              li persistent data that you want to share between containers, or want to use from non-persistent containers
              li docker run -d -v /dbdata --name dbdata training/postgres echo Data-only container for postgres
              li docker run -d --volumes-from dbdata --name db1 training/postgres
              li docker run -d --volumes-from dbdata --name db2 training/postgres


      section
        h2 Fig
        h3 
          a(href='http://www.fig.sh/') fig.sh
        h4 Fast, isolated development environments using Docker            li

      section
        h2 Acknowledgements &amps; Links
          ol
            li
              a(href='http://vagrantup.com/') vagrantup.com
            li
              a(href='http://docker.io/') docker.io
            li
              a(href='https://www.docker.com/tryit/') Interactive Docker Tutorial
            li
              a(href='http://www.fig.sh/') Fig
            li
              a(href='https://github.com/boot2docker/boot2docker') boot2docker (for OSX and Windows)
            li
              a(href='http://stackoverflow.com/questions/16647069/should-i-use-vagrant-or-docker-io-for-creating-an-isolated-environment') Should I use Vagrant or Docker.io for creating an isolated environment?
            li
              a(href='http://chadoh.com/why-you-shouldnt-use-vagrant-real-talk-from-a-vagrant-burnout') Why You Shouldn’t Use Vagrant: Real talk from a Vagrant burn-out
            li
              a(href='http://giphy.com/') giphy.com              
            li 
              a(href='https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-an-ubuntu-14-04-server') Installing node on Ubuntu


    script(src='build/build.js')