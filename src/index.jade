doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title Vagrant and Docker: Is that a Vagrant in your Computer? / Computer Whaling (Using Vagrant/Docker to set up your environment)

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article

      section
        h1 Is that a Vagrant in your Computer?
        h3 Using Vagrant to set up your environment

        h4 Slides &amp; Examples: 
        p
          a(href='https://github.com/CornerGeeks/') https://github.com/CornerGeeks/
        p
          a(href='https://github.com/CornerGeeks/vagrant-docker') Slides
          |  / 
          a(href='https://github.com/CornerGeeks/docker-intro') Dockerfiles
          |  / 
          a(href='https://github.com/CornerGeeks/vagrant-intro') Vagrantfile

      section
        h2 Introduction
        h3 Timothy Lim
        h4
          a(href='https://twitter.com/thewheat') @thewheat
        h4
          a(href='https://plus.google.com/+TimothyLimSH') +TimothyLimSH
        h4
          a(href='http://thewheatfield.org') thewheatfield.org
        h4
          a(href='http://bruneigeekmeet.com') bruneigeekmeet.com

      section
        h2 Let's start development!
        h3 In Theory        
        ol
          li Go to website &amp; install requirements
          li Code
            br
            img(src='images/type_keyboard.gif',style='width:70%')
          li Profit!


      section
        h2 Let's start development!
        h3 In Reality
        p.bullet
          ol.bullet
            li Go to website
            li Try to install requirements
            li See something breaks
            li Google Bing the problem
            li Try to fix it
            li Go to Step 2
              p
                img(src='images/bang_head_keyboard.gif')


      section.vagrant
        h2 Vagrant
        h3 
          a(href='https://vagrantup.com') vagrantup.com
        div
          h5 Create and configure reproducible &amp; portable development environments
          p &nbsp;&nbsp;
          p
          p.bullet
            strong.bullet How-To Use
            ol.bullet
              li.bullet Install
              li.bullet Download configuration file (i.e. Vagrantfile). 
                br
                | Manual download or quickstart via command line
                br
                span.code vagrant init hashicorp/precise32
              li.bullet Start the box
                br
                span.code vagrant up
              li.bullet Environment set up perfectly and ready to go

      section
        h2 Where does the Vagrant environment live?
        p.bullet
        ul.bullet
          li Depends on 
            a(href='http://docs.vagrantup.com/v2/providers/') the provider
          li Typically Virtual Machines: 
            a(href='http://www.virtualbox.org/') VirtualBox, 
            a(href='http://www.vmware.com/') VMWare
          li But 
            a(href='https://github.com/mitchellh/vagrant/wiki/Available-Vagrant-Plugins#providers') many more 
            | including 
            a(href='https://github.com/mitchellh/vagrant-aws') AWS

      section
        h2 Vagrant Terminology
        ol.bullet
          li.bullet
            b Boxes: 
            ul
              li base operating system image to create the Vagrant environment from (e.g. .iso file to install an OS)
          li.bullet
            b Vagrantfile:
            ul
              li configuration file that creates a Vagrant Environment from a Box
          li.bullet
            b Vagrant Environment:
            ul
              li the actual running instance of a environment built from a Box via a Vagrantfile
          li.bullet
            b Providers: 
            ul
              li where the Vagrant Environment actually runs
              li specified in the Vagrantfile

      section
        h2 Vagrantfile
        h3 configuration file
        p.bullet
        ul.bullet
          li.bullet
            b 
            a(href='http://docs.vagrantup.com/v2/getting-started/boxes.html') Box
            | : base OS image to create environment from
          li.bullet 
            b Environment settings
            | : Name, memory usage
          li.bullet 
            b 
            a(href='http://docs.vagrantup.com/v2/getting-started/networking.html') Networking
            | : Port forward to be accessible from host
          li.bullet 
            b 
            a(href='http://docs.vagrantup.com/v2/getting-started/synced_folders.html') Synced Folders
            | : by default 
            span(class='code') /vagrant
            |  in the Vagrant environment is linked to 
            | host machine's filesystem where the Vagrantfile is
          li.bullet
            b 
            a(href='http://docs.vagrantup.com/v2/getting-started/provisioning.html') Provisioning
            | : install your tech stack

      sectopm
        h2 Vagrantfile
        h3 sample
        pre(class='code',style='text-align: left; font-size: smaller',)
          | Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
          |    config.vm.box = "hashicorp/precise32"
          |    config.vm.hostname = "GDGBNdevfest2014"
          br
          |    config.vm.network "forwarded_port", guest: 80, host: 8000
          |    config.vm.network "forwarded_port", guest: 8080, host: 8080
          |    config.vm.network "private_network", ip: "192.168.10.19"
          br
          |    config.vm.synced_folder "www", "/var/www"
          |    config.vm.synced_folder "var_cache_apt", "/var/cache/apt/"
          br
          |    config.vm.provision "shell", :path => "setup.sh"
          |  end

      section
        h2 Vagrant Commands
        ul
          li Initialize Vagrantfile from vagrantcloud.com
            br
            span(class='code') vagrant init hashicorp/precise32
          li Start Machine
            br
            span(class='code') vagrant up
          li Suspend Machine (your files are safe)
            br
            span(class='code') vagrant halt
          li Nuke it all!
            br
            span(class='code') vagrant destroy
          li SSH into its heart (Windows may need Putty)
            br
            span(class='code') vagrant ssh 

      section
        h2 Vagrant Commands
        ul.bullet
          li Provision, we must (runs first time with vagrant up)
            br
            span(class='code') vagrant provision
          li.bullet Box Managment 
            br
            span(class='code') vagrant box
            ul
              li All locally downloaded boxes
                br
                span(class='code') vagrant box list

      section
        h2 Vagrant Cloud
        h3
          a(href="https://vagrantcloud.com") vagrantcloud.com
        ul
          li Search / Download existing boxes
          li Share your boxes

      section
        h2 Problems
        h3 It's never just a walk in the clouds
        p.bullet
        ul.bullet
          li.bullet
            b Corrupted boxes: 
            ul
              li Need to manually delete locally downloaded box
          li.bullet
            b Shared folder not set up: 
            | Google Bing it
          li.bullet
            b Incompatible Vagrant and VirtualBox: 
            ul
              li Update to latest else slowly downgrade VirtualBox
          li.bullet
            b git cloning UNIX vs Windows line endings: 
            ul
              li dos2unix
              li
                span(class='code') git config --global core.autocrlf input
          li.bullet
            b Possibly time consuming and painful to setup

      section
        h1 And that's Vagrant in a nutshell
        h3 Hopefully....

      section
        h1 But wait, there's more!

      section
        h1 Computer Whaling
        h3 Using Docker to set up your environment

      section.docker
        h2 Docker
        h3
          a(href='http://docker.io/') docker.io
        p.bullet
        div.bullet
          ul
            li Open platform for developers and sysadmins to build, ship, and run distributed applications.
            li Portable and lightweight (FAST!)
            li.bullet Focused more on deployment and production
            li.bullet Development solutions exist such as  
              a(href='http://www.fig.sh/') Fig
      section
        h2 Docker Terminology
        h3
          a(href='https://docs.docker.com/introduction/understanding-docker/') Understanding Docker
        ul
          li 
            b Images: 
            | (build component)
            ul
              li Read-only template to create containers from
              li Similar to Vagrant Boxes

          li  
            b Registries: 
            | (distribution component)
            ul 
              li Storage of images
              li Public 
                a(href='http://hub.docker.com/') Docker Hub
                |  or Private 
                a(href='https://github.com/docker/docker-registry') Docker Registry
          li 
            b Containers: 
            | (run component)
            ul
              li Seen has processes on your computer
              li Once it finished, it will close
          li
            b Dockerfile: 
            ul
              li a configuration file to build Docker Images
      section
        h2 Docker Commands (1)
        ul
          li Search for a docker image
            div.code docker search *search string*
          li Download image locally
            div.code docker pull user/imagename:tag
          li Run commands in Container
            div.code docker run user/imagename
              br
              | &nbsp;&nbsp;command_to_run arguments_to_command
          li Get bash shell in Container
            div.code docker run -t -i user/imagename /bin/bash
      section
        h2 Docker Commands (2)
        ul
          li Save changes
            div.code docker commit container_id
              br
              | &nbsp;&nbsp;-m="message for the commit"
              br
              | &nbsp;&nbsp;-a="name of author"
              br
              | &nbsp;&nbsp;user/imagename:tag

          li Listing containers
            div.code
              div docker ps -l  # Last Running
              div docker ps &nbsp;&nbsp; # Currently running
              div docker ps -a  # All
          
          li Stop Container
            div.code docker stop container_id_or_name

          li List all downloaded Images          
            div.code docker images
          
      section
        h2 Docker Commands (3)
        ul
          li Inspect
            div.code docker inspect container_name_or_id
          li Deleting
            div.code
              div docker rm container_name_or_id
              div docker rmi image_name_or_id
          li Build image from a Dockerfile
            div.code # in folder containing Dockerfile
            div.code docker build -t image_name . 

      section
        h2 Dockerfile
        ul 
          li
            span.code FROM
            |  user/imagename:tag (specify base image)
          li
            span.code RUN
            |  echo "Run install commands e.g. apt-get install"
          li
            span.code WORKDIR
            |  /default/path/for/all/things
          li
            span.code CMD
            |  default action to take when running container
          li
            span.code ENTRYPOINT
            |  enables whole container to runs as if it was an executable
          li
            span.code EXPOSE
            |  Port#1 Port#2

      section
        h2 Mapping ports
        ul
          li Ports of services in container to be exposed to the host machine
          li Auto mapped
            div.code docker run 
              br
              | &nbsp;&nbsp;-P training/webapp python app.py
          li Manually mapped
            div.code docker run
              br
              | &nbsp;&nbsp;-p hostPort:ContainerPort 
              br
              | &nbsp;&nbsp;-p 8080:80
              br
              | &nbsp;&nbsp;training/webapp python app.py
          li See port mapping
            div.code docker port container_id

      section
        h2 Working Directory
        ul
          li Specify where to start any 
            span.code RUN
            |  , 
            span.code CMD
            |  or 
            span.code ENTRYPOINT
            br
            br
            div.code docker run 
              br
              | &nbsp;&nbsp;-p 8080:8080 -p 35729:35729
              br
              | &nbsp;&nbsp;-w "/slides/presentation-tabs/" 
              br
              | &nbsp;&nbsp;devfest/node
              br
              | &nbsp;&nbsp;gulp serve

      section
        h2 Linking containers
        ul
          li For interaction between containers
          li Name a container and reference it
            div.code
              div docker run --name db training/postgres
              br
              div docker run -P --name web --link db:thedb 
                br
                | &nbsp;&nbsp;training/webapp python app.py              
              br 
              div docker run --name web --link db:thedb 
                br
                | &nbsp;&nbsp;training/webapp cat /etc/hosts
              br
              div 172.17.0.32 thedb

          li the 'db' container must have necessary ports EXPOSEd from the originating Dockerfile
      section
        h2 Managing Data in Containers
        h3 1. Data Volumes 
        ul
          li Persist until no containers use them (non host file mounts)
          li Changes not included when you update an image
          li Examples:
            ul
              li Create a /webapp folder in the container
                div.code docker run -d -P --name web -v /webapp 
                  br
                  | &nbsp;&nbsp;training/webapp python app.py
                li Mount host file system in the container
                div.code docker run -d -P --name web 
                  br
                  | &nbsp;&nbsp;-v /host/webapp:/container/webapp 
                  br
                  | &nbsp;&nbsp;training/webapp python app.py               
      section
        h2 Managing Data in Containers
        h3 2. Data Volume Containers
        ul
          li Containers that act solely as a data volume
          li Creation
            div.code docker run -d -v /dbdata --name dbdata 
              br
              | &nbsp;&nbsp;training/postgres echo Data-only container
          li Usage
            div.code docker run -d --volumes-from dbdata
              br
              | &nbsp;&nbsp;--name db1 training/postgres
            div.code docker run -d --volumes-from dbdata
              br
              | &nbsp;&nbsp;--name db2 training/postgres




      section
        h2 Findings
        ul.bullet
          li.bullet Docker is more complicated as whole
          li.bullet Docker provision is easier
          li.bullet Allows quicker testing and experimentation
          li.bullet You can work with same container that will be pushed to production
          li.bullet Much smaller footprint in terms of CPU and Disk Space used
          li.bullet It's all the rage now

      section
        h2 In conclusion
        h3 Dock all the things!
        ul
          li
            a(href='https://github.com/boot2docker/boot2docker') boot2docker 
            | is your friend for non Linux users!
          li No reason not to learn it        

      section
        h2 Acknowledgements &amp; Links
        ol
          li
            a(href='http://vagrantup.com/') vagrantup.com 
          li
            a(href='http://docker.io/') docker.io
            | : 
            a(href='https://www.docker.com/tryit/') Interactive Docker Tutorial
          li
            a(href='http://stackoverflow.com/questions/16647069/should-i-use-vagrant-or-docker-io-for-creating-an-isolated-environment') Should I use Vagrant or Docker.io for creating an isolated environment?
          li
            a(href='http://chadoh.com/why-you-shouldnt-use-vagrant-real-talk-from-a-vagrant-burnout') Why You Shouldn’t Use Vagrant: Real talk from a Vagrant burn-out
          li
            a(href='https://github.com/boot2docker/boot2docker') boot2docker (for OSX and Windows)
          li
            a(href='https://github.com/wsargent/docker-cheat-sheet') Docker Cheat Sheet          
          li
            a(href='http://blog.thoward37.me/articles/where-are-docker-images-stored/') Where are Docker Images Stored
          li
            a(href='http://www.altviz.co/blog/using-docker-as-a-development-environment') Using Docker as a Development Environment
          li
            a(href='http://giphy.com/') giphy.com              
          li 
            a(href='https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-an-ubuntu-14-04-server') Installing node on Ubuntu

      section
        h2 The End
        h3 Thanks for your time and enjoy the rest of the event!
        h4
          a(href='https://twitter.com/thewheat') @thewheat
        h4
          a(href='https://plus.google.com/+TimothyLimSH') +TimothyLimSH
        h4
          a(href='http://thewheatfield.org') thewheatfield.org
        h4
          a(href='http://bruneigeekmeet.com') bruneigeekmeet.com



    script(src='build/build.js')